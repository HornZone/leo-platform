<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Message">
	<sql id="getSequence">
		select nextval('message') as id
	</sql>
	<resultMap id="MessageResult" type="com.leo.platform.upms.entity.message.Message">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 17 
			22:33:39 GMT+08:00 2016. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="crudType" property="crudType" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="creatorName" property="creatorName" jdbcType="VARCHAR" />
		<result column="lastUpdateTime" property="lastUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="lastUpdator" property="lastUpdator" jdbcType="VARCHAR" />
		<result column="lastUpdatorName" property="lastUpdatorName"
			jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="VARCHAR" />
		<result column="optLock" property="optLock" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />

		<result column="sender_id" property="senderId" jdbcType="BIGINT" />
		<result column="receiver_id" property="receiverId" jdbcType="BIGINT" />
		<result column="send_date" property="sendDate" jdbcType="TIMESTAMP" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="sender_state" property="senderState" jdbcType="VARCHAR" />
		<result column="sender_state_change_date" property="senderStateChangeDate"
			jdbcType="TIMESTAMP" />
		<result column="receiver_state" property="receiverState"
			jdbcType="VARCHAR" />
		<result column="receiver_state_change_date" property="receiverStateChangeDate"
			jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="is_read" property="isRead" jdbcType="BIT" />
		<result column="is_replied" property="isReplied" jdbcType="BIT" />
		<result column="parent_id" property="parentId" jdbcType="BIGINT" />
		<result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="messageColumns">
		t.id as id,
		t.crudType as crudType,
		t.code as code,
		t.createTime as
		createTime,
		t.creator as creator,
		t.creatorName as
		creatorName,
		t.lastUpdateTime as lastUpdateTime,
		t.lastUpdator as
		lastUpdator,
		t.lastUpdatorName as lastUpdatorName,
		t.version as version,
		t.optLock as
		optLock,
		t.remark as remark,
		t.note as note,

		t.sender_id as
		senderId,
		t.receiver_id as receiverId,
		t.send_date as
		sendDate,
		t.title as
		title,
		t.sender_state as
		senderState,
		t.sender_state_change_date as
		senderStateChangeDate,
		t.receiver_state as receiverState,
		t.receiver_state_change_date as
		receiverStateChangeDate,
		t.type as type,
		t.is_read as isRead,
		t.is_replied as isReplied,
		t.parent_id as parentId,
		t.parent_ids as
		parentIds
	</sql>

	<sql id="SO_Where_Clause_Like">
		<where>
			1 = 1
			<if test=" senderId !=null">
				AND t.sender_id LIKE CONCAT('%',#{senderId},'%')
			</if>
			<if test=" receiverId !=null ">
				AND t.receiver_id LIKE CONCAT('%',#{receiverId},'%')
			</if>
			<if test="sendDate !=null">
				AND t.send_date LIKE CONCAT('%',#{sendDate},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( title )">
				AND t.title LIKE CONCAT('%',#{title},'%')
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( senderState )">
				AND t.sender_state LIKE CONCAT('%',#{senderState},'%')
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( receiverState )">
				AND t.receiver_state LIKE CONCAT('%',#{receiverState},'%')
			</if>

			<if test="senderStateChangeDate !=null">
				AND t.sender_state_change_date LIKE
				CONCAT('%',#{senderStateChangeDate},'%')
			</if>

			<if test="receiverStateChangeDate !=null">
				AND t.receiver_state_change_date LIKE
				CONCAT('%',#{receiverStateChangeDate},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( type )">
				AND t.type LIKE CONCAT('%',#{type},'%')
			</if>

			<if test="isRead !=null">
				AND t.is_read LIKE CONCAT('%',#{isRead},'%')
			</if>

			<if test="isReplied !=null">
				AND t.is_replied LIKE CONCAT('%',#{isReplied},'%')
			</if>

			<if test="parentId !=null">
				AND t.parent_id LIKE CONCAT('%',#{parentId},'%')
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( parentIds )">
				AND t.parent_ids LIKE CONCAT('%',#{parentIds},'%')
			</if>

			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="SO_Where_Clause">
		<where>
			1 = 1
			<if test=" senderId !=null">
				AND t.sender_id = #{senderId}
			</if>
			<if test=" receiverId !=null ">
				AND t.receiver_id = #{receiverId}
			</if>
			<if test="sendDate !=null">
				AND t.send_date = #{sendDate}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( title )">
				AND t.title = #{title}
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( senderState )">
				AND t.sender_state = #{senderState}
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( receiverState )">
				AND t.receiver_state = #{receiverState}
			</if>

			<if test="senderStateChangeDate !=null">
				AND t.sender_state_change_date = #{senderStateChangeDate}
			</if>

			<if test="receiverStateChangeDate !=null">
				AND t.receiver_state_change_date =
				#{receiverStateChangeDate}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( type )">
				AND t.type = #{type}
			</if>

			<if test="isRead !=null">
				AND t.is_read = #{isRead}
			</if>

			<if test="isReplied !=null">
				AND t.is_replied = #{isReplied}
			</if>

			<if test="parentId !=null">
				AND t.parent_id = #{parentId}
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( parentIds )">
				AND t.parent_ids = #{parentIds}
			</if>

			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="common_sql"><!-- common_sql放时间比较语句，排序语句，limit语句，between and等基本sql语句 -->
		<!-- <if test="createDate != null"> <![CDATA[and t. create_date <= #{createDate} 
			]]> </if> -->
	</sql>


	<!-- update的so_where_clause -->
	<sql id="Update_SO_Where_Clause_Like">
		<where>
			1 = 1
			<if test=" oldSenderId !=null">
				AND sender_id LIKE CONCAT('%',#{oldSenderId},'%')
			</if>

			<if test=" oldReceiverId !=null">
				AND receiver_id LIKE CONCAT('%',#{oldReceiverId},'%')
			</if>
			
			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( oldSenderState )">
				AND sender_state LIKE CONCAT('%',#{oldSenderState},'%')
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( oldReceiverState )">
				AND receiver_state LIKE CONCAT('%',#{oldReceiverState},'%')
			</if>

			<if test="oldSenderStateChangeDate !=null">
				AND sender_state_change_date LIKE
				CONCAT('%',#{oldSenderStateChangeDate},'%')
			</if>

			<if test="oldReceiverStateChangeDate !=null">
				AND receiver_state_change_date LIKE
				CONCAT('%',#{oldReceiverStateChangeDate},'%')
			</if>

			<if test=" senderStates != null ">
				AND sender_state in
				<foreach collection="senderStates" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<if test=" receiverStates != null ">
				AND receiver_state in
				<foreach collection="receiverStates" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<if test=" ids != null ">
				AND id in
				<foreach collection="ids" index="index" item="item" open="("
					close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<include refid="update_common_sql" />
		</where>
	</sql>

	<sql id="Update_SO_Where_Clause">
		<where>
			1 = 1
			<if test=" oldSenderId !=null">
				AND t.sender_id = #{oldSenderId}
			</if>
			
			<if test=" oldReceiverId !=null">
				AND t.receiver_id = #{oldReceiverId}
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( oldSenderState )">
				AND t.sender_state = #{oldSenderState}
			</if>

			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( oldReceiverState )">
				AND t.receiver_state = #{oldReceiverState}
			</if>

			<if test="oldSenderStateChangeDate !=null">
				AND t.sender_state_change_date =
				#{oldSenderStateChangeDate}
			</if>

			<if test="oldReceiverStateChangeDate !=null">
				AND t.receiver_state_change_date =
				#{oldReceiverStateChangeDate}
			</if>

			<if test=" senderStates != null ">
				AND sender_state in
				<foreach collection="senderStates" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<if test=" receiverStates != null ">
				AND receiver_state in
				<foreach collection="receiverStates" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<if test=" ids != null ">
				AND id in
				<foreach collection="ids" index="index" item="item" open="("
					close=")" separator=",">
					#{item}
				</foreach>
			</if>

			<include refid="update_common_sql" />
		</where>
	</sql>

	<sql id="update_common_sql"><!-- common_sql放时间比较语句，排序语句，limit语句，between and等基本sql语句 -->
		<!-- <if test="createDate != null"> <![CDATA[and t. create_date <= #{createDate} 
			]]> </if> -->
		<if test="senderExpireDate != null"> <![CDATA[and sender_state_change_date <= #{senderExpireDate} 
			]]>
		</if>

		<if test="receiverExpireDate != null"> <![CDATA[and receiver_state_change_date <= #{receiverExpireDate} 
			]]>
		</if>
	</sql>
	<!-- update的so_where_clause -->


	<insert id="insert" parameterType="com.leo.platform.upms.entity.message.Message">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 17 
			22:33:39 GMT+08:00 2016. -->
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			<include refid="getSequence" />
		</selectKey>
		insert into personal_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="crudType != null">
				crudType,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="creatorName != null">
				creatorName,
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime,
			</if>
			<if test="lastUpdator != null">
				lastUpdator,
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="optLock != null">
				optLock,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="note != null">
				note,
			</if>

			<if test="senderId != null">
				sender_id,
			</if>
			<if test="receiverId != null">
				receiver_id,
			</if>
			<if test="sendDate != null">
				send_date,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="senderState != null">
				sender_state,
			</if>
			<if test="senderStateChangeDate != null">
				sender_state_change_date,
			</if>
			<if test="receiverState != null">
				receiver_state,
			</if>
			<if test="receiverStateChangeDate != null">
				receiver_state_change_date,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="isRead != null">
				is_read,
			</if>
			<if test="isReplied != null">
				is_replied,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="parentIds != null">
				parent_ids,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="crudType != null">
				#{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				#{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				#{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				#{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				#{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>

			<if test="senderId != null">
				#{senderId,jdbcType=BIGINT},
			</if>
			<if test="receiverId != null">
				#{receiverId,jdbcType=BIGINT},
			</if>
			<if test="sendDate != null">
				#{sendDate,jdbcType=TIMESTAMP},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="senderState != null">
				#{senderState,jdbcType=VARCHAR},
			</if>
			<if test="senderStateChangeDate != null">
				#{senderStateChangeDate,jdbcType=TIMESTAMP},
			</if>
			<if test="receiverState != null">
				#{receiverState,jdbcType=VARCHAR},
			</if>
			<if test="receiverStateChangeDate != null">
				#{receiverStateChangeDate,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=BIT},
			</if>
			<if test="isReplied != null">
				#{isReplied,jdbcType=BIT},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=BIGINT},
			</if>
			<if test="parentIds != null">
				#{parentIds,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 17 
			22:33:39 GMT+08:00 2016. -->
		delete from personal_message
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<update id="update" parameterType="com.leo.platform.upms.entity.message.Message">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 17 
			22:33:39 GMT+08:00 2016. -->
		update personal_message
		<set>
			<if test="crudType != null">
				crudType = #{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				creatorName = #{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				lastUpdator = #{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName = #{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				optLock = #{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>

			<if test="senderId != null">
				sender_id = #{senderId,jdbcType=BIGINT},
			</if>
			<if test="receiverId != null">
				receiver_id = #{receiverId,jdbcType=BIGINT},
			</if>
			<if test="sendDate != null">
				send_date = #{sendDate,jdbcType=TIMESTAMP},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="senderState != null">
				sender_state = #{senderState,jdbcType=VARCHAR},
			</if>
			<if test="senderStateChangeDate != null">
				sender_state_change_date =
				#{senderStateChangeDate,jdbcType=TIMESTAMP},
			</if>
			<if test="receiverState != null">
				receiver_state = #{receiverState,jdbcType=VARCHAR},
			</if>
			<if test="receiverStateChangeDate != null">
				receiver_state_change_date =
				#{receiverStateChangeDate,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=BIT},
			</if>
			<if test="isReplied != null">
				is_replied = #{isReplied,jdbcType=BIT},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=BIGINT},
			</if>
			<if test="parentIds != null">
				parent_ids = #{parentIds,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getById" parameterType="long" resultMap="MessageResult">
		select
		<include refid="messageColumns" />
		from personal_message t
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getAll" resultMap="MessageResult">
		select
		<include refid="messageColumns" />
		from personal_message t
	</select>

	<select id="getListByModel" parameterType="com.leo.platform.upms.model.message.MessageModel"
		resultMap="MessageResult">
		SELECT
		<include refid="messageColumns" />
		FROM personal_message t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getCountByModel" parameterType="com.leo.platform.upms.model.message.MessageModel"
		resultType="long">
		SELECT COUNT(1) FROM personal_message t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getListByIds" parameterType="List" resultMap="MessageResult">
		SELECT
		<include refid="messageColumns" />
		FROM personal_message t WHERE t.id in
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="getListByField" resultMap="MessageResult">
		SELECT
		<include refid="messageColumns" />
		FROM personal_message t WHERE T.${fieldName} = #{colValue}
	</select>

	<!-- update-where带语句 -->
	<update id="changeSenderState" parameterType="com.leo.platform.upms.model.message.MessageModel">
		update personal_message
		<set>
			<if test="senderState != null">
				sender_state = #{senderState,jdbcType=VARCHAR},
			</if>
			<if test="senderStateChangeDate != null">
				sender_state_change_date =
				#{senderStateChangeDate,jdbcType=TIMESTAMP},
			</if>
		</set>

		<choose>
			<when test="like">
				<include refid="Update_SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="Update_SO_Where_Clause" />
			</otherwise>
		</choose>
	</update>

	<update id="changeReceiverState" parameterType="com.leo.platform.upms.model.message.MessageModel">
		update personal_message
		<set>
			<if test="receiverState != null">
				receiver_state = #{receiverState,jdbcType=VARCHAR},
			</if>
			<if test="receiverStateChangeDate != null">
				receiver_state_change_date =
				#{receiverStateChangeDate,jdbcType=TIMESTAMP},
			</if>
		</set>

		<choose>
			<when test="like">
				<include refid="Update_SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="Update_SO_Where_Clause" />
			</otherwise>
		</choose>
	</update>

	<update id="changeSenderStateList" parameterType="com.leo.platform.upms.model.message.MessageModel">
		update personal_message
		<set>
			<if test="senderState != null">
				sender_state = #{senderState,jdbcType=VARCHAR},
			</if>
			<if test="senderStateChangeDate != null">
				sender_state_change_date =
				#{senderStateChangeDate,jdbcType=TIMESTAMP},
			</if>

		</set>

		<choose>
			<when test="like">
				<include refid="Update_SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="Update_SO_Where_Clause" />
			</otherwise>
		</choose>
	</update>

	<update id="changeReceiverStateList" parameterType="com.leo.platform.upms.model.message.MessageModel">
		update personal_message
		<set>
			<if test="receiverState != null">
				receiver_state = #{receiverState,jdbcType=VARCHAR},
			</if>
			<if test="receiverStateChangeDate != null">
				receiver_state_change_date =
				#{receiverStateChangeDate,jdbcType=TIMESTAMP},
			</if>

		</set>

		<choose>
			<when test="like">
				<include refid="Update_SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="Update_SO_Where_Clause" />
			</otherwise>
		</choose>
	</update>

	<delete id="clearDeletedMessage" parameterType="com.leo.platform.upms.model.message.MessageModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 17 
			22:33:39 GMT+08:00 2016. -->
		delete from personal_message

		where sender_state=#{senderState} and receiver_state=#{receiverState}
	</delete>

	<update id="markRead" parameterType="com.leo.platform.upms.model.message.MessageModel">
		update Message set read=true

		<choose>
			<when test="like">
				<include refid="Update_SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="Update_SO_Where_Clause" />
			</otherwise>
		</choose>
	</update>

</mapper>