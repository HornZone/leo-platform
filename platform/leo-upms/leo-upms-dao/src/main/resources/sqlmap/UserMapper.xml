<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="User">

	<sql id="getSequence">
		select nextval('user') as id
	</sql>
	<resultMap id="UserResult" type="com.leo.platform.upms.entity.user.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			12:38:13 GMT+08:00 2016. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="crudType" property="crudType" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="creatorName" property="creatorName" jdbcType="VARCHAR" />
		<result column="lastUpdateTime" property="lastUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="lastUpdator" property="lastUpdator" jdbcType="VARCHAR" />
		<result column="lastUpdatorName" property="lastUpdatorName"
			jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="VARCHAR" />
		<result column="optLock" property="optLock" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />

		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile_phone_number" property="mobilePhoneNumber"
			jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="deleted" property="deleted" jdbcType="BIT" />
		<result column="admin" property="admin" jdbcType="BIT" />

		<collection property="organizationJobs" fetchType="lazy"
			ofType="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob" column="id" javaType="ArrayList" 
			select="UserOrganizationJob.getListByUserId" />
	</resultMap>

	<sql id="userColumns">
		t.id as id,
		t.crudType as crudType,
		t.code as code,
		t.createTime as
		createTime,
		t.creator as creator,
		t.creatorName as
		creatorName,
		t.lastUpdateTime as lastUpdateTime,
		t.lastUpdator as
		lastUpdator,
		t.lastUpdatorName as lastUpdatorName,
		t.version as version,
		t.optLock as
		optLock,
		t.remark as remark,
		t.note as note,

		t.username as
		username,
		t.email as email,
		t.mobile_phone_number as
		mobilePhoneNumber,
		t.password as password,
		t.salt as salt,
		t.create_date
		as createDate,
		t.status as status,
		t.deleted as deleted,
		t.admin as admin
	</sql>

	<sql id="SO_Where_Clause_Like">
		<where>
			1 = 1
			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( username )">
				AND t.username LIKE CONCAT('%',#{username},'%')
			</if>
			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( mobilePhoneNumber )">
				AND t.mobile_phone_number LIKE CONCAT('%',#{mobilePhoneNumber},'%')
			</if>
			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( email )">
				AND t.email LIKE CONCAT('%',#{email},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( password )">
				AND t.password LIKE CONCAT('%',#{password},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( salt )">
				AND t.salt LIKE CONCAT('%',#{salt},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( status )">
				AND t.status LIKE CONCAT('%',#{status},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( deleted )">
				AND t.deleted LIKE CONCAT('%',#{deleted},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( admin )">
				AND t.admin LIKE CONCAT('%',#{admin},'%')
			</if>
			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="SO_Where_Clause">
		<where>
			1 = 1
			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( username )">
				AND t.username = #{username}
			</if>
			<if
				test="@com.leo.platform.common.util.StringUtil@isNotBlank( mobilePhoneNumber )">
				AND t.mobile_phone_number = #{mobilePhoneNumber}
			</if>
			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( email )">
				AND t.email = #{email}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( password )">
				AND t.password = #{password}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( salt )">
				AND t.salt = #{salt}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( status )">
				AND t.status = #{status}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( deleted )">
				AND t.deleted = #{deleted}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( admin )">
				AND t.admin = #{admin}
			</if>

			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="common_sql"><!-- common_sql放时间比较语句，排序语句，limit语句，between and等基本sql语句 -->
		<if test="createDate != null">
            <![CDATA[and t. create_date <= #{createDate} ]]>
		</if>
	</sql>
	<!-- insert data into DB start -->
	<insert id="insert" parameterType="com.leo.platform.upms.entity.user.User">
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			<include refid="getSequence" />
		</selectKey>
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="crudType != null">
				crudType,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="creatorName != null">
				creatorName,
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime,
			</if>
			<if test="lastUpdator != null">
				lastUpdator,
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="optLock != null">
				optLock,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobilePhoneNumber != null">
				mobile_phone_number,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="deleted != null">
				deleted,
			</if>
			<if test="admin != null">
				admin,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="crudType != null">
				#{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				#{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				#{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				#{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				#{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhoneNumber != null">
				#{mobilePhoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="deleted != null">
				#{deleted,jdbcType=BIT},
			</if>
			<if test="admin != null">
				#{admin,jdbcType=BIT},
			</if>
		</trim>
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		delete from sys_user
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<update id="update" parameterType="com.leo.platform.upms.entity.user.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		update sys_user
		<set>
			<if test="crudType != null">
				crudType = #{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				creatorName = #{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				lastUpdator = #{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName = #{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				optLock = #{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhoneNumber != null">
				mobile_phone_number =
				#{mobilePhoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="deleted != null">
				deleted = #{deleted,jdbcType=BIT},
			</if>
			<if test="admin != null">
				admin = #{admin,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getById" parameterType="long" resultMap="UserResult">
		select
		<include refid="userColumns" />
		from sys_user t
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getAll" resultMap="UserResult">
		select
		<include refid="userColumns" />
		from sys_user t
	</select>

	<select id="getListByModel" parameterType="com.leo.platform.upms.model.user.UserModel"
		resultMap="UserResult">
		SELECT
		<include refid="userColumns" />
		FROM sys_user t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getCountByModel" parameterType="com.leo.platform.upms.model.user.UserModel"
		resultType="long">
		SELECT COUNT(1) FROM sys_user t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getListByIds" parameterType="List" resultMap="UserResult">
		SELECT
		<include refid="userColumns" />
		FROM sys_user t WHERE t.id in
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="getListByField" resultMap="UserResult">
		SELECT
		<include refid="userColumns" />
		FROM sys_user t WHERE T.${fieldName} = #{colValue}
	</select>
</mapper>