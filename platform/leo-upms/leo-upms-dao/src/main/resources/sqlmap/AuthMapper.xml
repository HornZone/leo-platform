<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Auth">
	<sql id="getSequence">
		select nextval('auth') as id
	</sql>

	<resultMap id="AuthResult" type="com.leo.platform.upms.entity.auth.Auth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			12:38:13 GMT+08:00 2016. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="crudType" property="crudType" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="creatorName" property="creatorName" jdbcType="VARCHAR" />
		<result column="lastUpdateTime" property="lastUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="lastUpdator" property="lastUpdator" jdbcType="VARCHAR" />
		<result column="lastUpdatorName" property="lastUpdatorName"
			jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="VARCHAR" />
		<result column="optLock" property="optLock" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />

		<result column="organization_id" property="organizationId"
			jdbcType="BIGINT" />
		<result column="job_id" property="jobId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="group_id" property="groupId" jdbcType="BIGINT" />
		<result column="role_ids" property="roleIds" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="authColumns">
		t.id as id,
		t.crudType as crudType,
		t.code as code,
		t.createTime as
		createTime,
		t.creator as creator,
		t.creatorName as
		creatorName,
		t.lastUpdateTime as lastUpdateTime,
		t.lastUpdator as
		lastUpdator,
		t.lastUpdatorName as lastUpdatorName,
		t.version as version,
		t.optLock as
		optLock,
		t.remark as remark,
		t.note as note,

		t.organization_id as
		organizationId,
		t.job_id as jobId,
		t.user_id as
		userId,
		t.group_id as groupId,
		t.role_ids as roleIds,
		t.type
		as type
	</sql>

	<sql id="SO_AND_Where_Clause_Like">
		<where>
			1 = 1
			<if test=" organizationId !=null">
				AND t.organization_id LIKE CONCAT('%',#{organizationId},'%')
			</if>
			<if test=" jobId !=null ">
				AND t.job_id LIKE CONCAT('%',#{jobId},'%')
			</if>
			<if test="groupId !=null">
				AND t.group_id LIKE CONCAT('%',#{groupId},'%')
			</if>

			<if test="userId !=null">
				AND t.user_id LIKE CONCAT('%',#{userId},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( roleIds )">
				AND t.role_ids LIKE CONCAT('%',#{roleIds},'%')
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( type )">
				AND t.type LIKE CONCAT('%',#{type},'%')
			</if>
			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="SO_AND_Where_Clause">
		<where>
			1 = 1
			<if test="organizationId !=null">
				AND t.organization_id = #{organizationId}
			</if>
			<if test="jobId !=null">
				AND t.job_id = #{jobId}
			</if>
			<if test="groupId !=null">
				AND t.group_id = #{groupId}
			</if>

			<if test="userId !=null">
				AND t.user_id  = #{userId}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( roleIds )">
				AND t.role_ids = #{roleIds}
			</if>

			<if test="@com.leo.platform.common.util.StringUtil@isNotBlank( type )">
				AND t.type = #{type}
			</if>

			<include refid="common_sql" />
		</where>
	</sql>
	
	<sql id="common_sql"><!-- common_sql放时间比较语句，排序语句，limit语句，between and等基本sql语句 -->
		<!-- <if test="createDate != null"> <![CDATA[and t. create_date <= #{createDate} 
			]]> </if> -->
	</sql>

	<insert id="insert" parameterType="com.leo.platform.upms.entity.auth.Auth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			<include refid="getSequence" />
		</selectKey>
		insert into sys_auth
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="crudType != null">
				crudType,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="creatorName != null">
				creatorName,
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime,
			</if>
			<if test="lastUpdator != null">
				lastUpdator,
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="optLock != null">
				optLock,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="organizationId != null">
				organization_id,
			</if>
			<if test="jobId != null">
				job_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="groupId != null">
				group_id,
			</if>
			<if test="roleIds != null">
				role_ids,
			</if>
			<if test="type != null">
				type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="crudType != null">
				#{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				#{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				#{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				#{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				#{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="organizationId != null">
				#{organizationId,jdbcType=BIGINT},
			</if>
			<if test="jobId != null">
				#{jobId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="groupId != null">
				#{groupId,jdbcType=BIGINT},
			</if>
			<if test="roleIds != null">
				#{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		delete from sys_auth
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<update id="update" parameterType="com.leo.platform.upms.entity.auth.Auth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		update sys_auth
		<set>
			<if test="crudType != null">
				crudType = #{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				creatorName = #{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				lastUpdator = #{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName = #{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				optLock = #{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="organizationId != null">
				organization_id = #{organizationId,jdbcType=BIGINT},
			</if>
			<if test="jobId != null">
				job_id = #{jobId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="groupId != null">
				group_id = #{groupId,jdbcType=BIGINT},
			</if>
			<if test="roleIds != null">
				role_ids = #{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getById" parameterType="long" resultMap="AuthResult">
		select
		<include refid="authColumns" />
		from sys_auth t
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getAll" resultMap="AuthResult">
		select
		<include refid="authColumns" />
		from sys_auth t
	</select>

	<select id="getListByModel" parameterType="com.leo.platform.upms.model.auth.AuthModel"
		resultMap="AuthResult">
		SELECT
		<include refid="authColumns" />
		FROM sys_auth t
		<choose>
			<when test="like">
				<include refid="SO_AND_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_AND_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getCountByModel" parameterType="com.leo.platform.upms.model.auth.AuthModel"
		resultType="long">
		SELECT COUNT(1) FROM sys_auth t
		<choose>
			<when test="like">
				<include refid="SO_AND_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_AND_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getListByIds" parameterType="List" resultMap="AuthResult">
		SELECT
		<include refid="authColumns" />
		FROM sys_auth t WHERE t.id in
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="getListByField" resultMap="AuthResult">
		SELECT
		<include refid="authColumns" />
		FROM sys_auth t WHERE T.${fieldName} = #{colValue}
	</select>
	
	<select id="findRoleIds" parameterType="com.leo.platform.upms.model.auth.AuthModel"
		resultType="java.util.List">
		SELECT
		DISTINCT t.role_ids
		FROM sys_auth t
		WHERE 1=1 
		<if test="userId !=null">
			AND t.user_id  = #{userId}
		</if>
		<if test="groupIds !=null">
			OR t.group_id in 
			<foreach collection="groupIds" index="index" item="groupId" open="("
				close=")" separator=",">
				#{groupId}
			</foreach>
		</if>
		<if test="organizationIds !=null">
			OR ( t.organization_id in
			<foreach collection="organizationIds" index="index" item="organizationId" open="("
				close=")" separator=",">
				#{organizationId}
			</foreach>
			AND t.job_id = 0)
		</if>
		<if test="jobId !=null">
			OR ( t.organization_id = 0 AND t.job_id in
			<foreach collection="jobIds" index="index" item="jobId" open="("
				close=")" separator=",">
				#{jobId}
			</foreach>
			)
		</if>
		<if test="organizationJobIds !=null">
		  <foreach collection="organizationJobIds" item="item" index="index">
		  OR ( t.organization_id = '${item[0]}' AND t.job_id = '${item[1]}')
		  </foreach>  
		</if>
	</select>
</mapper>