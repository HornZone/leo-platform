<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserOrganizationJob">
	<sql id="getSequence">
		select nextval('userorganizationjob') as id
	</sql>
	<resultMap id="UserOrganizationJobResult"
		type="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			12:38:13 GMT+08:00 2016. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="crudType" property="crudType" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="creatorName" property="creatorName" jdbcType="VARCHAR" />
		<result column="lastUpdateTime" property="lastUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="lastUpdator" property="lastUpdator" jdbcType="VARCHAR" />
		<result column="lastUpdatorName" property="lastUpdatorName"
			jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="VARCHAR" />
		<result column="optLock" property="optLock" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />

		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="organization_id" property="organizationId"
			jdbcType="BIGINT" />
		<result column="job_id" property="jobId" jdbcType="BIGINT" />
	</resultMap>

	<sql id="userOrganizationJobColumns">
		t.id as id,
		t.crudType as crudType,
		t.code as code,
		t.createTime as
		createTime,
		t.creator as creator,
		t.creatorName as
		creatorName,
		t.lastUpdateTime as lastUpdateTime,
		t.lastUpdator as
		lastUpdator,
		t.lastUpdatorName as lastUpdatorName,
		t.version as version,
		t.optLock as
		optLock,
		t.remark as remark,
		t.note as note,

		t.user_id as
		userId,
		t.organization_id as organizationId,
		t.job_id as jobId
	</sql>

	<sql id="SO_Where_Clause_Like">
		<where>
			1 = 1
			<if test=" userId !=null">
				AND t.user_id LIKE CONCAT('%',#{userId},'%')
			</if>
			<if test=" organizationId !=null">
				AND t.organization_id LIKE CONCAT('%',#{organizationId},'%')
			</if>
			<if test=" jobId !=null">
				AND t.job_id LIKE CONCAT('%',#{jobId},'%')
			</if>
			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="SO_Where_Clause">
		<where>
			1 = 1
			<if test=" userId !=null ">
				AND t.user_id = #{userId}
			</if>
			<if test=" organizationId !=null ">
				AND t.organization_id = #{organizationId}
			</if>
			<if test=" jobId !=null ">
				AND t.job_id = #{jobId}
			</if>
			<include refid="common_sql" />
		</where>
	</sql>

	<sql id="common_sql"><!-- common_sql放时间比较语句，排序语句，limit语句，between and等基本sql语句 -->
	</sql>

	<insert id="insert"
		parameterType="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			<include refid="getSequence" />
		</selectKey>
		insert into sys_user_organization_job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="crudType != null">
				crudType,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="creatorName != null">
				creatorName,
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime,
			</if>
			<if test="lastUpdator != null">
				lastUpdator,
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="optLock != null">
				optLock,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="organizationId != null">
				organization_id,
			</if>
			<if test="jobId != null">
				job_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="crudType != null">
				#{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				#{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				#{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				#{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				#{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="organizationId != null">
				#{organizationId,jdbcType=BIGINT},
			</if>
			<if test="jobId != null">
				#{jobId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<delete id="delete" parameterType="java.lang.Long">
		delete from
		sys_user_organization_job
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<update id="update"
		parameterType="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 30 
			17:54:20 GMT+08:00 2016. -->
		update sys_user_organization_job
		<set>
			<if test="crudType != null">
				crudType = #{crudType,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="creatorName != null">
				creatorName = #{creatorName,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				lastUpdateTime = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdator != null">
				lastUpdator = #{lastUpdator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatorName != null">
				lastUpdatorName = #{lastUpdatorName,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=VARCHAR},
			</if>
			<if test="optLock != null">
				optLock = #{optLock,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="organizationId != null">
				organization_id = #{organizationId,jdbcType=BIGINT},
			</if>
			<if test="jobId != null">
				job_id = #{jobId,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getById" parameterType="long" resultMap="UserOrganizationJobResult">
		select
		<include refid="userOrganizationJobColumns" />
		from sys_user_organization_job t
		where t.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getAll" resultMap="UserOrganizationJobResult">
		select
		<include refid="userOrganizationJobColumns" />
		from sys_user_organization_job t
	</select>

	<select id="getListByModel"
		parameterType="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob"
		resultMap="UserOrganizationJobResult">
		SELECT
		<include refid="userOrganizationJobColumns" />
		FROM sys_user_organization_job t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getCountByModel"
		parameterType="com.leo.platform.upms.entity.userorganizationjob.UserOrganizationJob"
		resultType="long">
		SELECT COUNT(1) FROM sys_user_organization_job t
		<choose>
			<when test="like">
				<include refid="SO_Where_Clause_Like" />
			</when>
			<otherwise>
				<include refid="SO_Where_Clause" />
			</otherwise>
		</choose>
	</select>

	<select id="getListByIds" parameterType="List"
		resultMap="UserOrganizationJobResult">
		SELECT
		<include refid="userOrganizationJobColumns" />
		FROM sys_user_organization_job t WHERE t.id in
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="getListByField" resultMap="UserOrganizationJobResult">
		SELECT
		<include refid="userOrganizationJobColumns" />
		FROM sys_user_organization_job t WHERE T.${fieldName} = #{colValue}
	</select>

	<select id="getUserOrganizationJobOnNotExistsOrganizationOrJob"
		resultMap="UserOrganizationJobResult">
		SELECT
		<include refid="userOrganizationJobColumns" />
		FROM sys_user_organization_job t where not exists(select 1 from
		sys_job
		j
		where t.job_id=j.id) or not exists(select 1 from
		sys_organization o
		where
		t.organization_id=o.id)
	</select>

	<select id="getListByUserId" parameterType="long"
		resultMap="UserOrganizationJobResult">
		SELECT
		<include refid="userOrganizationJobColumns" />
		FROM sys_user_organization_job t where t.user_id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteUserOrganizationJobOnNotExistsUser">
		delete from sys_user_organization_job t where not
		exists(select 1
		from
		sys_user u where t.user_id=u.id)
	</delete>
</mapper>